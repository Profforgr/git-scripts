#!/bin/sh

GNATROOT=/opt/gnat/2007

PATH=$GNATROOT/bin:$HOME/bin:$PATH

res=0

REP=/tmp/_$$

# Repository name
GIT_INDEX_DIR=`dirname $GIT_INDEX_FILE`
REPOSIT=`dirname $GIT_INDEX_DIR`
REPOSIT_NAME=`basename $REPOSIT`

[ "$REPOSIT" == "" ] && echo No repository found && exit 1;

# Set Style_Checker options

OWEB="-H -cP -cY -l256"

#  The copyright pattern to check
CPYR=""

#  Pathnames matching the regexp will be excluded from the test
EXCLUDE=""

case "$REPOSIT_NAME" in
   gps) SC_OPTS="-ign out -ign tmplt -ign sed -ign txt \
        -lang Ada -h18 -cp -cy -sp -gnat05 \
        -lang TXML $OWEB -lang Python -C -l120 -H \
        -lang XML $OWEB -lang HTML $OWEB -lang XSD $OWEB -lang CSS $OWEB"
        CPYR="Copyright \(C\) 2\d\d\d-2\d\d\d, AdaCore"
        EXCLUDE="\(design/tests\)"
   ;;
   *) SC_OPTS="-ign out -ign tmplt -ign sed -ign txt \
        -lang Ada -cp -cy -sp -gnat05 -lang TXML $OWEB \
        -lang XML $OWEB -lang HTML $OWEB -lang XSD $OWEB -lang CSS $OWEB"
   ;;
esac

# Process each file

function check() {
   id=$4
   file=`basename $6`
   mode=$5
   # skip deleted files
   if [ "$mode" = "D" ]; then
      return 0;
   fi
   if [[ -n "$EXCLUDE" && `echo "$6" | grep --regexp="$EXCLUDE"` ]]; then
      return 0;
   fi

   git show $id > $REP/$file
   if [ "$CPYR" = "" ]; then
      ( cd $REP; style_checker $SC_OPTS -n "$6" "$file"; )
   else
      ( cd $REP; style_checker $SC_OPTS -cf'$CPYR' -n "$6" "$file"; )
   fi
   res=$(($res + $?))
   rm -f $REP/$file
}

mkdir $REP

# Get files to be commited
# <N1> <N2> <Id-OLD> <Id-NEW> <status> <Filename>
git-diff-index -M --cached HEAD > $REP/files

while read list
do
   check $list
done < $REP/files

rm -fr $REP

exit $res

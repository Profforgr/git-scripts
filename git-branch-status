#! /bin/sh

# This script uses git branch and rev-list commands to output changes between
# branches.
#
# $ git rev-list master..topic
#   list all changes made in topic not yet in master
#   This is used to list changes not yet merged in master
#
# $ git rev-list topic..master
#   list all changes made on master not in topic
#   This is used to check if a rebase is needed for a clean fast-forward

# The master branch is master by default
MASTER=master
REBASE=0
VERBOSE=0
LIST=0

function usage() {
   echo "$0 [-r] [-v] [-l] [--help] [<branchname>]"
   echo ""
   echo "This command will compare all branches on a git repository against"
   echo "the branch given in option (default is master). By default it just"
   echo "output the number of commits not yet merged on <branchname>."
   echo ""
   echo "   -r   : also output the number of commits done on <branchname>"
   echo "          since the branch has been created."
   echo "   -l   : list commits to be merged."
   echo "   -v   : verbose mode"
   exit 1
}

while :
do
   case "$1" in
      -r)
            REBASE=1
	    ;;
      -v)
            VERBOSE=1
	    ;;
      -l)
            LIST=1
	    ;;
      -h|--h|--he|--hel|--help)
            usage
	    ;;
       *)
	    MASTER=$1
	    break
	    ;;
   esac
   shift
done

if [ "$1" = "" ]; then
   MASTER=master
else
   MASTER=$1
fi

echo ""
echo Check all branches against $MASTER

if [ ! -f .git/config ]; then
   echo Must be run inside a Git repository
fi;

BRANCHES=/tmp/branches-$$
REVLIST=/tmp/rl-$$
BOUTPUT=/tmp/bout-$$

function check_branch (){
   out=0
   branch=$1

   echo "" > $BOUTPUT
   echo -n $branch >> $BOUTPUT

   if [ "$REBASE" = "1" ]; then
      git rev-list --pretty=oneline $branch..$MASTER > $REVLIST
      if [ -s $REVLIST ]; then
         n=`cat $REVLIST | wc -l`
         echo -n ", "$n" commit(s) away" >> $BOUTPUT
	 out=1
      else
         if [ "$VERBOSE" = "1" ]; then
            echo -n ", no rebase required" >> $BOUTPUT
         fi
      fi
   fi

   git rev-list --pretty=oneline $MASTER..$branch > $REVLIST
   if [ -s $REVLIST ]; then
      n=`cat $REVLIST | wc -l`
      echo ", "$n" merge(s) waiting" >> $BOUTPUT
      out=1
      if [ "$LIST" = "1" ]; then
         cat $REVLIST >> $BOUTPUT
      fi
   else
      if [ "$VERBOSE" = "1" ]; then
         echo ", nothing to merge" >> $BOUTPUT
      fi
   fi

   if [ "$out" = "1" ]; then
      cat $BOUTPUT
   fi
   rm -f $BOUTPUT
}

# List all branched, removes the star and skip the master branch

git branch | sed 's,*,,g' | grep -v $MASTER > $BRANCHES

while read entry
do
   check_branch $entry
done < $BRANCHES

rm -f $BRANCHES $REVLIST

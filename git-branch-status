#! /bin/sh

# This script uses git branch and rev-list commands to output changes between
# branches.
#
# $ git rev-list master..topic
#   list all changes made in topic not yet in master
#   This is used to list changes not yet merged in master
#
# $ git rev-list topic..master
#   list all changes made on master not in topic
#   This is used to check if a rebase is needed for a clean fast-forward

# The master branch is master by default
MASTER=master
REBASE=0
VERBOSE=0
LIST=0

function usage() {
   echo "$0 [-r] [-v] [-l] [--help] [<branchname>]"
   echo ""
   echo "This command will compare all branches on a git repository against"
   echo "the branch given in option (default is master). By default it just"
   echo "output the number of commits not yet merged on <branchname>."
   echo ""
   echo "   -r   : also output the number of commits done on <branchname>"
   echo "          since last merge."
   echo "   -l   : list commits to be merged."
   echo "   -v   : verbose mode"
   exit 1
}

while :
do
   case "$1" in
      -r)
            REBASE=1
	    ;;
      -v)
            VERBOSE=1
	    ;;
      -l)
            LIST=1
	    ;;
      -h|--h|--he|--hel|--help)
            usage
	    ;;
      "") break
            ;;
      *)
            if [ "$MASTER" != "" ]; then
	       MASTER=$1
            fi
	    ;;
   esac
   shift
done

if [ "$MASTER" = "" ]; then
   MASTER=master
fi

echo ""
echo Check all branches against $MASTER

if [ ! -f .git/config ]; then
   echo Must be run inside a Git repository
fi;

function check_branch (){
   branch=$1

   BOUTPUT=$branch
   REVLIST=""

   if [ "$REBASE" = "1" ]; then
      REVLIST=$(git rev-list --pretty=oneline $branch..$MASTER)
      if [ "$REVLIST" != "" ]; then
         n=$(echo -e "$REVLIST" | wc -l)
         BOUTPUT="$BOUTPUT, "$n" commit(s) away"
      else
         if [ "$VERBOSE" = "1" ]; then
            BOUTPUT="$BOUTPUT, no rebase required"
         fi
      fi
   fi

   REVLIST=$(git rev-list --pretty=oneline $MASTER..$branch)
   if [ "$REVLIST" != "" ]; then
      n=$(echo -e "$REVLIST" | wc -l)
      BOUTPUT="$BOUTPUT, "$n" merge(s) waiting"
      if [ "$LIST" = "1" ]; then
         BOUTPUT="$BOUTPUT\n$REVLIST"
      fi
   else
      if [ "$VERBOSE" = "1" ]; then
         BOUTPUT=", nothing to merge"
      fi
   fi

   if [ "$BOUTPUT" != "$branch" ]; then
      echo -e "$BOUTPUT"
      echo
   fi
}

# List all branched, removes the star and skip the master branch

git branch | sed 's,*,,g' | grep -v $MASTER | while read entry
do
   check_branch $entry
done

rm -f $REVLIST
